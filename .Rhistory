install.packages(c("checklist", "fortunes", "remotes", "INBOmd", "INBOtheme"))
library(sf)
setwd("~/GitHub/craywatch_selection/data/input")
library(xml2)
library(sf)
library(xml2)
library(dplyr)
# Bestandspad naar de KML-file
kml_file <- "./data/input/localities.kml"
# Lezen van de KML-bestand
kml_data <- st_read(kml_file)
gitwd()
getwd()
setwd("~/GitHub/craywatch_selection")
library(sf)
library(xml2)
library(dplyr)
# Bestandspad naar de KML-file
kml_file <- "./data/input/localities.kml"
# Lezen van de KML-bestand
kml_data <- st_read(kml_file)
# Functie om de HTML-gecodeerde string om te zetten naar een lijst
parse_description <- function(desc) {
desc_list <- strsplit(desc, "<br>")[[1]]
desc_list <- lapply(desc_list, function(x) {
parts <- strsplit(x, ": ", fixed = TRUE)[[1]]
if (length(parts) == 2) {
return(setNames(list(parts[2]), parts[1]))
} else {
return(NULL)
}
})
desc_list <- do.call(c, desc_list)
return(desc_list)
}
# Toepassen van de parse functie op de beschrijving kolom
parsed_data <- lapply(kml_data$Description, parse_description)
# Omzetten naar een dataframe
parsed_data <- lapply(parsed_data, function(x) {
as.data.frame(t(unlist(x)), stringsAsFactors = FALSE)
})
# Binden van alle rijen in een enkele dataframe
df <- bind_rows(parsed_data)
# Verwijder de Description kolom van kml_data
kml_data <- kml_data %>% select(-Description)
# Voeg de nieuwe attributen toe aan kml_data
kml_data <- cbind(kml_data, df)
###Transform before doing intersects with other layers
kml_data <- st_transform(kml_data, crs = 31370)
###Voer de bewerkingen uit voor de nieuw gecreÃ«erde punten
#Lees de locaties
provincies_path = "./data/input/shapefiles/provincies.shp"
postkantons_path = "./data/input/shapefiles/postkantons.shp"
gemeenten_path = "./data/input/shapefiles/gemeenten.shp"
#Laad de files op
# Shapefiles inlezen
provincies_shape <- st_read(provincies_path)
postkantons_shape <- st_read(postkantons_path)
gemeenten_shape <- st_read(gemeenten_path)
###UPDATE DE TOEGEKENDE WAARDEN VOOR isRESERVED
# Hernoem de kolom 'Name' naar 'isReserved'
names(kml_data)[names(kml_data) == "Name"] <- "isReserved"
# Wijs dezelfde waarden toe aan de nieuwe kolom 'isReserved'
kml_data$isReserved <- kml_data$updateRes
